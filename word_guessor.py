from random import randrange

word_list = ['человек', 'работа', 'вопрос', 'сторона', 'страна', 'случай',
             'голова', 'ребенок', 'система', 'отношение', 'женщина', 'деньги',
             'машина', 'проблема', 'решение', 'история', 'власть', 'тысяча',
             'возможность', 'результат', 'область', 'статья', 'компания',
             'группа', 'развитие', 'процесс', 'условие', 'средство', 'начало',
             'уровень', 'минута', 'качество', 'дорога', 'действие',
             'государство', 'любовь', 'взгляд', 'общество', 'деятельность',
             'организация', 'президент', 'комната', 'порядок', 'момент',
             'письмо', 'помощь', 'ситуация', 'состояние', 'квартира',
             'внимание', 'программа', 'задача', 'предприятие', 'разговор',
             'правительство', 'производство', 'информация', 'положение',
             'интерес', 'федерация', 'правило', 'управление', 'мужчина',
             'партия', 'сердце', 'движение', 'материал', 'неделя', 'чувство',
             'газета', 'причина', 'основа', 'товарищ', 'культура', 'данные',
             'мнение', 'документ', 'институт', 'проект', 'встреча', 'директор',
             'служба', 'судьба', 'девушка', 'очередь', 'состав', 'количество',
             'событие', 'объект', 'создание', 'значение', 'период',
             'искусство', 'структура', 'пример', 'исследование', 'гражданин',
             'начальник', 'принцип', 'воздух', 'характер', 'борьба',
             'использование', 'размер', 'образование', 'мальчик',
             'представитель', 'участие', 'девочка', 'политика', 'картина',
             'территория', 'изменение', 'направление', 'рисунок', 'течение',
             'музыка', 'правда', 'свобода', 'память', 'команда', 'договор',
             'дерево', 'хозяин', 'природа', 'телефон', 'позиция', 'писатель',
             'самолет', 'солнце', 'спектакль', 'способ', 'журнал',
             'руководитель', 'специалист', 'оценка', 'регион', 'процент',
             'родитель', 'требование', 'основание', 'половина', 'анализ',
             'автомобиль', 'экономика', 'литература', 'бумага', 'степень',
             'господин', 'надежда', 'предмет', 'руководство', 'площадь',
             'режиссер', 'поверхность', 'ощущение', 'станция', 'стекло']


def get_word(word_list):
    num = randrange(len(word_list))
    word = word_list[num]
    return word.upper()


def display_hangman(tries):
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
                ''',
                # голова, торс, обе руки, одна нога
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     /
                   -
                ''',
                # голова, торс, обе руки
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |
                   -
                ''',
                # голова, торс и одна рука
                '''
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |
                   -
                ''',
                # голова и торс
                '''
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |
                   -
                ''',
                # голова
                '''
                   --------
                   |      |
                   |      O
                   |
                   |
                   |
                   -
                ''',
                # начальное состояние
                '''
                   --------
                   |      |
                   |
                   |
                   |
                   |
                   -
                '''
    ]
    return stages[tries]


def choice_letter():
    letters = input('Твоя буква:\n')
    while not letters.isalpha():
        print('Неизвестное значение')
        letters = input('Твоя буква:\n')
    else:
        return letters.upper()


def choice_word():
    words = input('Твое слово:\n')
    while not words.isalpha():
        print('Неизвестное значение')
        words = input('Твое слово:\n')
    else:
        return words.upper()


def new_play():
    while True:
        answer = input('Хочешь сыграть еще раз? Отправь "+"/"-"\n')
        if answer == '+':
            return True
        elif answer not in ('-', '+'):
            print('Поставь + или - ')
            answer = input('Хочешь сыграть еще раз? Отправь "+"/"-"\n')
        else:
            print('Спасибо. Еще увидимся :)')
            return False


def play():
    print('Привет! Давай сыграем в угадайку слов!')
    while True:
        print('Всего тебя будет 6 попыток, чтобы угадать слово')
        word = get_word(word_list)
        tries = 6
        guessed_letters = []
        guessed_words = []
        word_completion = '_' * len(word)
        while 0 < tries:
            choice = input("Ты хочешь ввести букву или слово?\
                           буква - 1, слово - 2\n")
            if choice == '1':
                letter = choice_letter()
                if letter in guessed_letters:
                    print('Ты уже вводил эту букву')
                    continue
                else:
                    if letter in word:
                        guessed_letters.append(letter)
                        print('Отличная работа, буква', letter,
                              'присутствует в слове!')
                        word_as_list = list(word_completion)
                        indices = [i for i in range(len(word)) if word[i]
                                   == letter]
                        for index in indices:
                            word_as_list[index] = letter
                            word_completion = ''.join(word_as_list)
                            if '_' not in word_completion:
                                break
                    else:
                        print('Такой буквы в слове нет')
                    tries -= 1
            elif choice == '2':
                person_word = choice_word()
                if person_word in guessed_words:
                    print('Ты уже вводил это слово')
                    continue
                else:
                    if person_word == word:
                        print('Поздравляю, ты угадал слово!')
                        break
                    else:
                        print('Ты не угадал')
                        guessed_words.append(person_word)
                        tries -= 1
            else:
                print('Неизвесное значение')
            print(f'У тебя осталось {tries} попыток, чтобы угадать слово')
            print(display_hangman(tries))
            print(word_completion)
        else:
            print(f'Ты исчерпал все попытки. Загаданное слово {word}')
        if new_play():
            continue
        else:
            break


play()
